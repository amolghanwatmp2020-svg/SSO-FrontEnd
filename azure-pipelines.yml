# azure-pipelines-frontend.yml
trigger:
- azure-pipelines # or your working branch name (e.g., 'main' or 'sso-azure-manual-deployment')

pool:
  vmImage: 'ubuntu-latest' # 'ubuntu-latest' is generally preferred for Node.js builds

stages:
- stage: BuildFrontend
  displayName: 'Build and package Angular App'
  jobs:
  - job: BuildJob
    displayName: 'Build Angular App'
    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '18.x' # Use the Node.js version compatible with your Angular project

    - task: Npm@1
      displayName: 'Install Angular dependencies'
      inputs:
        command: 'install'
        # workingDir: '' # Leave blank if angular.json is at the repo root

    - task: Npm@1
      displayName: 'Build Angular app'
      inputs:
        command: 'custom'
        customCommand: 'run build -- --configuration=production'
        # workingDir: '' # Leave blank if angular.json is at the repo root

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Angular Artifact'
      inputs:
        PathtoPublish: 'dist/angular-demo-sso' # ⭐ IMPORTANT: Update this path
        ArtifactName: 'angular-drop'
        publishLocation: 'Container'

- stage: DeployFrontend
  displayName: 'Deploy Angular App'
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy Angular App to Azure App Service'
    environment: 'SSO CICD' # Optional: Use an Azure DevOps Environment
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure App Service'
            inputs:
              azureSubscription: 'SSOProductionConnection' # ⭐ Use your service connection name
              appType: 'webApp'
              appName: 'sso-fronend' # ⭐ Use your actual Azure Web App name
              package: '$(Pipeline.Workspace)/angular-drop' # Path to the artifact from the build stage